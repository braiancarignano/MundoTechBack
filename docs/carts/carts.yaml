paths:

  /api/carts:
    get:
      summary: Obtiene todos los carritos
      tags: 
        - Carts
      responses:
        "200":
          description: El listado de carritos fue obtenido con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: mensaje de error
    post:
      summary: Crea un carrito en la base de datos
      tags: 
        - Carts
      responses:
        "200":
          description: El carrito fue creado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: mensaje de estado de la petición
                    example: Carrito creado
                  response:
                    type: object
                    properties:
                      _id:
                        type: mongoose.Schema.Types.ObjectId
                        description: Id del carrito
                        example: 644e9f6193979fc20618bc4c
                      products:
                        type: array
                        description: array de productos
                        example: []
                      __v:
                        type: number
                        description: versión del carrito
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: mensaje de error

  /api/carts/{cid}:
    get:
      summary: Obtiene una cart determinado por id
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: id del cart que se desea solicitar
        schema: 
          $type: String
      responses:
        "200":
          description: El cart fue obtenido con éxito
          content: 
            application/json:
              schema:
                $ref: "#components/schemas/Cart"
        "404":
          description: Error del lado del cliente generalmente provocado por el ingreso de un parámetro incorrecto o defeciente
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: No existe un Cart con la Id ingresada
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: " mensaje de error"
  /api/carts/delete/{cid}:
    delete:
      summary: Elimina los productos de un cart de la base de datos
      tags: 
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: id del cart que se desea vaciar
        schema: 
          $type: String
      responses:
        "200":
          description: El carrito fue vaciado con éxito
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: valor del estado de la petición
                    example: success
                  message:
                    type: string
                    description: mensaje de response
                    example: Productos del carrito eliminados exitósamente
        "400":
          description: Error del lado del cliente generalmente provocado por el ingreso de parámetros incorrectos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "La id ingresada es inválida"
        "404":
          description: Error del lado del cliente generalmente provocado por el ingreso de parámetros inexistentes
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: No existe un Cart con la Id ingresada
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "mensaje de error"

  /api/carts/{cid}/product/{pid}:
    put:
      summary: Agrega un producto a un carrito
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: id del cart donde se agregará el producto
        schema: 
          $type: String
      - name: pid
        in: path
        required: true
        description: id del producto que se agregar
        schema: 
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/addProductCart"
      responses:
        "200":
          description: El producto se ha agregado exitosamente
          content: 
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: valor del estado de la petición
                    example: success
                  message:
                    type: string
                    description: mensaje de response
                    example: Producto agregado exitosamente al carrito
                  payload:
                    $ref: "#components/schemas/Cart"
        "400":
          description: Error del lado del cliente generalmente provocado por el ingreso de parámetros incorrectos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "La id ingresada es inválida"
        "404":
          description: Error del lado del cliente generalmente provocado por el ingreso de parámetros inexistentes
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: No existe un Cart con la Id ingresada
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "error"
  /api/carts/delete/{cid}/product/{pid}:
    delete:
      summary: Elimina un producto del carrito
      tags:
        - Carts
      parameters:
      - name: cid
        in: path
        required: true
        description: id del cart donde se desea eliminar el producto
        schema: 
          $type: String
      - name: pid
        in: path
        required: true
        description: id del producto que se desea eliminar
        schema: 
          $type: String

      responses:
        "200":
          description: El producto se ha eliminado exitosamente
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: mensaje de response
                    example: Producto eliminado del carrito
                  payload:
                    $ref: "#components/schemas/Cart"
        "400":
          description: Error del lado del cliente generalmente provocado por el ingreso de parámetros incorrectos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "La id ingresada es inválida"
        "500":
          description: Error del lado del servidor generalmente provocado por una query defectuosa o error en la conexión de base de datos
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: mensaje de error
                    example: "error"

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por mongo
        products:
          type: array
          description: Array de productos del carrito
          items:
            type: object
            properties:
              product:
                type: mongoose.Schema.Types.ObjectId
                description: Id del producto
                example: 644e9f6193979fc20618bc4c
              quantity:
                type: number
                description: cantidad del producto en el carrito
                example: 10
        __v:
          type: Number
          description: Versión del objeto
          example: 0
      example:
        _id: ObjectId("640e1cab7d6b44b720aa7dbc")
        products: [
                {
            "product": "644e9f4c93979fc20618bc48",
            "quantity": 7,
            "_id": "644f8f78cb857f1c0998e344"
            },
            {
              "product": "644e9f6193979fc20618bc4c",
              "quantity": 10,
              "_id": "644f96f4888c6984107726d7"
            }
        ]
        __v: 0

  requestBodies:
    updateCart:
      type: object
      properties:
        products:
          type: array
          description: Array de productos que contiene el carrito
      example:
        products:
          - {
            product: ObjectId(63e10985e529735dd5c48127),
            quantity: 20
          }
          - {
            product: ObjectId(62e15986a529735dd5f38427),
            quantity: 23
          }
    updateProductQuantity:
      type: object
      properties:
        quantity:
          type: number
          description: cantidad a modificar del producto
          example: 80
    addProductCart:
      type: object
      properties:
        quantity:
          type: number
          description: cantidad a agregar del producto
          example: 10